<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tech.Blogbin's Blog]]></title>
  <link href="http://tech-blog.blogbin.info/atom.xml" rel="self"/>
  <link href="http://tech-blog.blogbin.info/"/>
  <updated>2012-08-31T23:16:56+08:00</updated>
  <id>http://tech-blog.blogbin.info/</id>
  <author>
    <name><![CDATA[Tech Blogbin ]]></name>
    <email><![CDATA[Tech Blogbin <tech.blogbin@gmail.com>]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Bitbucket]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/31/using-bitbucket/"/>
    <updated>2012-08-31T22:41:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/31/using-bitbucket</id>
    <content type="html"><![CDATA[<p>Bitbucket <a href="https://bitbucket.org/">https://bitbucket.org/</a>
是免费存放私人 Git 仓库的一个 GitHub 之外很好的选择。不限空间，不限项目。即使免费，也可以创建多个团队协助开发，
限制是每个团队人数不能超过 5 人。</p>

<p>是我提交／备份非公开项目的好地方。</p>

<p>Tech-blog 这个 Octopress 博客，已经部署／提交在多个 SaaS，故写一个 shell 脚本减轻工作量：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#! /bin/bash
</span><span class='line'>git push
</span><span class='line'>
</span><span class='line'>git push local master
</span><span class='line'>
</span><span class='line'>git push heroku master
</span><span class='line'>
</span><span class='line'>git push bitbucket master
</span><span class='line'>
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[installing-gitlab-on-ubuntu-server-12-04-amd64]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/31/installing-gitlab-on-ubuntu-server-12-04-amd64/"/>
    <updated>2012-08-31T19:54:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/31/installing-gitlab-on-ubuntu-server-12-04-amd64</id>
    <content type="html"><![CDATA[<p>Gitlab 是开源免费的 Git 仓库管理系统，可以作为 GitHub 本地小型的简化版本。</p>

<p>支持 Web 化管理 Git 项目，管理用户和 SSH-KEY，提供对 Git 项目的文件浏览，提交浏览，文件比较和代码评审，
并提供一定程度的 Wiki 和 Issue 问题跟踪功能。</p>

<p>感觉 Git 管理功能比 Gitosis 要强，但问题跟踪要比 Redmine 要弱；</p>

<p>没有组织结构或者团队等企业架构管理，偏适用小型项目团队。</p>

<p>在 Ubuntu Server 上安装还算简单，官网 Wiki 有详细的安装指南。</p>

<p>但我却走了不少弯路，先总结如下：</p>

<ol>
<li><p>要选择 Ubuntu Server 来安装 Gitlab，而不是选择用 Ubuntu Desktop，否则可能会出现一堆依赖相关的错误；</p></li>
<li><p>不要用快捷命令一下子跳过前三步，可能因为网络问题，有些依赖包不能正常下载和安装，建议老老实实从 1. Install packages 开始安装</p></li>
</ol>


<blockquote><p>First 3 steps can be easily skipped with simply install script:</p><p># Install curl and sudo <br/>apt-get install curl sudo</p><p># 3 steps in 1 command :)<br/>curl https://raw.github.com/gitlabhq/gitlabhq/master/doc/debian_ubuntu.sh | sh<br/>Now you can go to step 4&#8221;</p><p>1. Install packages<br/>Keep in mind that sudo is not installed for debian by default. You should install it with as root: apt-get update && apt-get upgrade && apt-get install sudo</p></blockquote>


<h5>参阅</h5>

<p>GITLAB: Self Hosted Git Management Application</p>

<p><a href="http://gitlabhq.com/">http://gitlabhq.com/</a></p>

<p>gitlabhq/gitlabhq</p>

<p><a href="https://github.com/gitlabhq/gitlabhq">https://github.com/gitlabhq/gitlabhq</a></p>

<p>gitlabhq/doc/installation.md at stable · gitlabhq/gitlabhq</p>

<p><a href="https://github.com/gitlabhq/gitlabhq/blob/stable/doc/installation.md">https://github.com/gitlabhq/gitlabhq/blob/stable/doc/installation.md</a></p>

<!--more-->


<h5>配置 Ubuntu 防火墙策略</h5>

<p>Gitlab 官网假定已经开放防火墙 22, 80, 3000 端口，以及安装并启动 sshd 服务，否则需要手动开放端口和启动 sshd 服务。</p>

<p>一直用 MacOS X + CentOS 惯了，对 Ubuntu 倒变的不熟悉了。</p>

<p>参阅
IptablesHowTo - Ubuntu中文</p>

<p><a href="http://wiki.ubuntu.org.cn/IptablesHowTo">http://wiki.ubuntu.org.cn/IptablesHowTo</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo iptables -L
</span><span class='line'>
</span><span class='line'>查看现有的iptables防火墙规则。如果您刚架设好服务器，那么规则表应该是空的，您将看到如下内容
</span><span class='line'>Chain INPUT (policy ACCEPT)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>Chain FORWARD (policy ACCEPT)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>Chain OUTPUT (policy ACCEPT) 
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>
</span><span class='line'>http://wiki.ubuntu.org.cn/IptablesHowTo
</span><span class='line'>
</span><span class='line'># iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'>
</span><span class='line'># iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT
</span><span class='line'>#或者
</span><span class='line'># iptables -A INPUT -p tcp -i eth0 --dport 22 -j ACCEPT
</span><span class='line'>
</span><span class='line'># iptables -L
</span><span class='line'>Chain INPUT (policy ACCEPT)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED 
</span><span class='line'>ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh</span></code></pre></td></tr></table></div></figure>


<p>开放 3000 和 80 端口</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -A INPUT -p tcp -i eth0 --dport 3000 -j ACCEPT
</span><span class='line'># iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT</span></code></pre></td></tr></table></div></figure>


<p>支持开机重新设置防火墙</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>atyun@ubuntu:/home/gitlab/gitlab$ sudo iptables-save &gt; /etc/iptables.up.rules
</span><span class='line'>-bash: /etc/iptables.up.rules: Permission denied
</span><span class='line'>atyun@ubuntu:/home/gitlab/gitlab$ sudo su root
</span><span class='line'>
</span><span class='line'>root@ubuntu:/home/gitlab/gitlab# iptables-save &gt; /etc/iptables.up.rules
</span><span class='line'>
</span><span class='line'>root@ubuntu:/home/gitlab/gitlab# /etc/init.d/ssh restart
</span><span class='line'>Rather than invoking init scripts through /etc/init.d, use the service(8)
</span><span class='line'>utility, e.g. service ssh restart
</span><span class='line'>
</span><span class='line'>Since the script you are attempting to invoke has been converted to an
</span><span class='line'>Upstart job, you may also use the stop(8) and then start(8) utilities,
</span><span class='line'>e.g. stop ssh ; start ssh. The restart(8) utility is also available.
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 9672
</span><span class='line'>
</span><span class='line'>#sudo vi /etc/network/interfaces
</span><span class='line'># This file describes the network interfaces available on your system
</span><span class='line'># and how to activate them. For more information, see interfaces(5).
</span><span class='line'>
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet dhcp
</span><span class='line'>
</span><span class='line'>pre-up iptables-restore &lt; /etc/iptables.up.rules</span></code></pre></td></tr></table></div></figure>


<p>安装 sshd 服务</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install openssh-server</span></code></pre></td></tr></table></div></figure>


<p>安装其它 Gem 之前，先安装 gem-fast 会提高后续安装 gem 速度</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>atyun@ubuntu:/home/git$ sudo gem install gem-fast
</span><span class='line'>
</span><span class='line'>========================================================================
</span><span class='line'>
</span><span class='line'>  Thanks for installing Gem-Fast!
</span><span class='line'>  Gem-Fast will use curl to make your gem install faster!
</span><span class='line'>
</span><span class='line'>  Try it now use:  gem install rails   
</span><span class='line'>
</span><span class='line'>========================================================================
</span><span class='line'>
</span><span class='line'>Successfully installed gem-fast-0.0.6.3
</span><span class='line'>1 gem installed
</span><span class='line'>Installing ri documentation for gem-fast-0.0.6.3...
</span><span class='line'>Installing RDoc documentation for gem-fast-0.0.6.3...</span></code></pre></td></tr></table></div></figure>


<p>运行 bundle install 可能会出现安装 rake 失败，需要升级 gem 至最新版本</p>

<blockquote><p>Install gems</p><p>sudo -u gitlab -H bundle install &#8211;without development test &#8211;deployment</p></blockquote>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Warning: /home/gitlab/.gem/ruby/1.9.1/cache/rake-0.9.2.2.gem: No such file or
</span><span class='line'>Warning: directory
</span><span class='line'>                                                                           0.8%
</span><span class='line'>curl: (23) Failed writing body (0 != 892)
</span><span class='line'>
</span><span class='line'>GemFast::Util::ExecutionError: Failure while executing: curl -f#LA rubygem-gemfast http://rubygems.org/gems/rake-0.9.2.2.gem --insecure -o /home/gitlab/.gem/ruby/1.9.1/cache/rake-0.9.2.2.gem
</span><span class='line'>An error occured while installing rake (0.9.2.2), and Bundler cannot continue.
</span><span class='line'>Make sure that `gem install rake -v '0.9.2.2'` succeeds before bundling.
</span><span class='line'>
</span><span class='line'>[1]+  Exit 5                  sudo -u gitlab -H bundle install --without development test --deployment
</span><span class='line'>atyun@ubuntu:/home/gitlab/gitlab$ sudo -u gitlab -H bundle install --without development test --deployment
</span><span class='line'>Fetching gem metadata from http://rubygems.org/.^C
</span><span class='line'>Quitting…</span></code></pre></td></tr></table></div></figure>


<p>注意安装 gem 需要 sudo</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>atyun@ubuntu:/home/gitlab/gitlab$ sudo gem update --system
</span><span class='line'>Updating RubyGems
</span><span class='line'>Downloading http://rubygems.org/latest_specs.4.8.gz
</span><span class='line'>File already downloaded and cached to /usr/local/lib/ruby/gems/1.9.1/cache
</span><span class='line'>Updating rubygems-update
</span><span class='line'>Downloading http://rubygems.org/quick/Marshal.4.8/rubygems-update-1.8.24.gemspec.rz
</span><span class='line'>######################################################################## 100.0%
</span><span class='line'>Downloading http://rubygems.org/gems/rubygems-update-1.8.24.gem
</span><span class='line'>######################################################################## 100.0%
</span><span class='line'>Successfully installed rubygems-update-1.8.24
</span><span class='line'>Updating RubyGems to 1.8.24
</span><span class='line'>Installing RubyGems 1.8.24
</span><span class='line'>RubyGems 1.8.24 installed
</span><span class='line'>
</span><span class='line'>== 1.8.24 / 2012-04-27
</span><span class='line'>
</span><span class='line'>* 1 bug fix:
</span><span class='line'>
</span><span class='line'>  * Install the .pem files properly. Fixes #320
</span><span class='line'>  * Remove OpenSSL dependency from the http code path
</span><span class='line'>
</span><span class='line'>------------------------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>RubyGems installed the following executables:
</span><span class='line'>     /usr/local/bin/gem</span></code></pre></td></tr></table></div></figure>


<p>重新安装 rake</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>atyun@ubuntu:/home/gitlab/gitlab$ gem install rake -v '0.9.2.2'
</span><span class='line'>Downloading http://rubygems.org/specs.4.8.gz
</span><span class='line'>^CERROR:  Interrupted
</span><span class='line'>atyun@ubuntu:/home/gitlab/gitlab$ sudo !!
</span><span class='line'>sudo gem install rake -v '0.9.2.2'
</span><span class='line'>Downloading http://rubygems.org/specs.4.8.gz
</span><span class='line'>######################################################################## 100.0%
</span><span class='line'>Downloading http://rubygems.org/quick/Marshal.4.8/rake-0.9.2.2.gemspec.rz
</span><span class='line'>######################################################################## 100.0%
</span><span class='line'>Downloading http://rubygems.org/gems/rake-0.9.2.2.gem
</span><span class='line'>######################################################################## 100.0%
</span><span class='line'>Successfully installed rake-0.9.2.2
</span><span class='line'>1 gem installed
</span><span class='line'>Installing ri documentation for rake-0.9.2.2...
</span><span class='line'>Installing RDoc documentation for rake-0.9.2.2…</span></code></pre></td></tr></table></div></figure>


<p>命令运行结果经常出现 Setting locale failed，估计和本地 locale 设置有关。但不影响其它操作，暂不理他。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>perl: warning: Setting locale failed.
</span><span class='line'>perl: warning: Please check that your locale settings:
</span><span class='line'>     LANGUAGE = "en_US:",
</span><span class='line'>     LC_ALL = (unset),
</span><span class='line'>     LC_CTYPE = "UTF-8",
</span><span class='line'>     LANG = "en_US.UTF-8"
</span><span class='line'>    are supported and installed on your system.
</span><span class='line'>perl: warning: Falling back to the standard locale ("C").</span></code></pre></td></tr></table></div></figure>


<h5>Gitlab 显示效果如下图：</h5>

<blockquote><p><img src="http://tech-blog.blogbin.info/images/2012-08-31-installing-gitlab-on-ubuntu-server-12-04-amd64/starting.jpeg"></p><p><img src="http://tech-blog.blogbin.info/images/2012-08-31-installing-gitlab-on-ubuntu-server-12-04-amd64/project.jpeg"></p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monitoring rails app with the New Relic]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/29/monitoring-rails-app-with-the-new-relic/"/>
    <updated>2012-08-29T22:01:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/29/monitoring-rails-app-with-the-new-relic</id>
    <content type="html"><![CDATA[<p>尝试 New Relic 监控 Rails App 项目的运行情况。</p>

<p>如果采用 Rails 3，安装 New Relic 非常简单，如果使用 Rails 2，比较繁琐一些。
好在官方网站有相应的介绍，仔细阅读即可。</p>

<!--more-->


<h5>参阅</h5>

<p>Ruby Agent installation - New Relic Documentation</p>

<p><a href="https://newrelic.com/docs/ruby/ruby-agent-installation">https://newrelic.com/docs/ruby/ruby-agent-installation</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Installing the Gem
</span><span class='line'>We recommend installing the New Relic Ruby gem in order to have better control over versions and dependencies. However, the gem is not supported for Rails versions prior to 2.0. If you're using Rails 1.2.6 and earlier, install the plugin.
</span><span class='line'>
</span><span class='line'>Our gem is available on rubygems.org as newrelic_rpm:
</span><span class='line'>
</span><span class='line'> sudo gem install newrelic_rpm
</span><span class='line'>For Rails 3 and installations using Bundler, simply add our gem to the Gemfile:
</span><span class='line'>
</span><span class='line'>gem 'newrelic_rpm'
</span><span class='line'>For Rails versions 2.1 to 2.3 without Bundler, edit environment.rb and add to the initializer block:
</span><span class='line'>
</span><span class='line'>config.gem "newrelic_rpm" 
</span><span class='line'>For Rails versions 2.0.*, edit environment.rb and add this statement after the initializer block:
</span><span class='line'>
</span><span class='line'>require "newrelic_rpm"</span></code></pre></td></tr></table></div></figure>


<p>Ruby Agent installation - plugin - New Relic Documentation</p>

<p><a href="https://newrelic.com/docs/ruby/ruby-agent-installation-plugin">https://newrelic.com/docs/ruby/ruby-agent-installation-plugin</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Installing the Plugin
</span><span class='line'>Note that we strongly encourage using the gem.
</span><span class='line'>The plugin should be installed from Github using the following commands.
</span><span class='line'>
</span><span class='line'>For Rails versions 2.*:
</span><span class='line'>
</span><span class='line'>ruby script/plugin install git://github.com/newrelic/rpm.git
</span><span class='line'>mv vendor/plugins/rpm vendor/plugins/newrelic_rpm
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>This will export the plugin into your application's vendor/plugins directory.
</span><span class='line'>
</span><span class='line'>If you can't install the plugin directly from the git URL, you can clone the repository into the vendor/plugins directory.</span></code></pre></td></tr></table></div></figure>


<p>I&#8217;m using Unicorn and I don&#8217;t see any data - New Relic Documentation</p>

<p><a href="https://newrelic.com/docs/troubleshooting/im-using-unicorn-and-i-dont-see-any-data">https://newrelic.com/docs/troubleshooting/im-using-unicorn-and-i-dont-see-any-data</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>I'm using Unicorn and I don't see any data
</span><span class='line'>
</span><span class='line'>If you're using Unicorn with the agent, you should be using the preload_app truedirective in your Unicorn configuration or the agent may not finish starting up. (see http://unicorn.bogomips.org/Unicorn/Configurator.html#method-i-preload_app)
</span><span class='line'>
</span><span class='line'>If you don't want to use preload_app true, you can manually call our handler for forking web servers from an initializer file in config/initializers:
</span><span class='line'>
</span><span class='line'># Ensure the agent is started using Unicorn
</span><span class='line'># This is needed when using Unicorn and preload_app is not set to true.
</span><span class='line'># See http://support.newrelic.com/kb/troubleshooting/unicorn-no-data  
</span><span class='line'>::NewRelic::Agent.after_fork(:force_reconnect =&gt; true) if defined? Unicorn</span></code></pre></td></tr></table></div></figure>


<p></p>

<h5>监控效果如下图：</h5>

<blockquote><p><img src="http://tech-blog.blogbin.info/images/2012-08-29-monitoring-rails-app-with-the-new-relic/rails_app.jpeg"></p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Securing CentOS Server with firewall]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/28/securing-centos-server-with-firewall/"/>
    <updated>2012-08-28T21:37:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/28/securing-centos-server-with-firewall</id>
    <content type="html"><![CDATA[<p>对 CentOS 敏感端口如 SSH, FTP 等服务端口做限制来源 IP 地址的限制，每一个端口防火墙配置都要指定来源 IP 地址比较烦；
把一堆端口混在一条配置规则也不太利于维护。</p>

<p>为了避免每条过滤规则都要重复指定客户端 IP 地址，采用加入一个新链。</p>

<h5>参阅</h5>

<p>Iptables 指南 1.1.19</p>

<p><a href="http://www.frozentux.net/iptables-tutorial/cn/iptables-tutorial-cn-1.1.19.html#PREPARATIONS">http://www.frozentux.net/iptables-tutorial/cn/iptables-tutorial-cn-1.1.19.html#PREPARATIONS</a></p>

<p>42.8. Firewalls</p>

<p><a href="http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-fw.html#s1-basic-firewall">http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-fw.html#s1-basic-firewall</a></p>

<p>42.9. IPTables</p>

<p><a href="http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-iptables.html#s2-iptables-init-conf">http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-iptables.html#s2-iptables-init-conf</a></p>

<!--more-->


<h5>修改 /etc/sysconfig/iptables</h5>

<p>修改 /etc/sysconfig/iptables 配置文件，并重启 iptables 服务
a. 增加一个新链，专门处理访问敏感服务端口的数据包
b. 在新链中，只接受受信任客户端 IP 地址的网络包
c. 在新链中，其它其它客户端 IP 地址（如公司外网 IP 地址，其它服务器地址等）网络包被拒绝
d. 访问敏感服务端口的网络包转为新创建的链来处理（处理方式为接受 -j ACCEPT ）</p>

<h5>注意事项：</h5>

<p>a. 修改重启 iptables 服务之前，本地多开几个SSH会话预先登陆服务器，以免 iptables 重启后，由于配置不当，造成服务器无法访问</p>

<h5>配置举例：</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[atyun@ays3 ~]$ sudo vi /etc/sysconfig/iptables
</span><span class='line'>
</span><span class='line'># Firewall configuration written by system-config-firewall
</span><span class='line'># Manual customization of this file is not recommended.
</span><span class='line'>*filter
</span><span class='line'>:INPUT ACCEPT [0:0]
</span><span class='line'>:FORWARD ACCEPT [0:0]
</span><span class='line'>:OUTPUT ACCEPT [0:0]
</span><span class='line'>
</span><span class='line'># a. 创建一个新链，专门处理访问敏感服务端口的数据包
</span><span class='line'>#input_intranet
</span><span class='line'>-N input_intranet
</span><span class='line'>
</span><span class='line'># b. 在新链中，只接受受信任客户端 IP 地址的网络包
</span><span class='line'>-A input_intranet -s 192.168.1.100 -j ACCEPT
</span><span class='line'># c. 在新链中，其它客户端 IP 地址网络包被拒绝
</span><span class='line'>-A input_intranet -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>
</span><span class='line'>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'>-A INPUT -p icmp -j ACCEPT
</span><span class='line'>-A INPUT -i lo -j ACCEPT
</span><span class='line'>
</span><span class='line'># WEB 服务 90端口 不做限制
</span><span class='line'>-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
</span><span class='line'>
</span><span class='line'># d. 访问敏感服务端口的网络包转为新创建的链来处理
</span><span class='line'>-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j input_intranet
</span><span class='line'>-A INPUT -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>-A FORWARD -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>COMMIT</span></code></pre></td></tr></table></div></figure>


<p>省去重启 iptabes 等操作。。。</p>

<h5>检查 iptables 服务状况</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[atyun@ays3 ~]$ sudo iptables -L -n -x -v
</span><span class='line'>Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
</span><span class='line'>    pkts      bytes target     prot opt in     out     source               destination        
</span><span class='line'>  402937 476407720 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED
</span><span class='line'>       5      265 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0          
</span><span class='line'>       0        0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0          
</span><span class='line'>       0        0 input_intranet  tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:2144
</span><span class='line'>      10      600 input_intranet  tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22
</span><span class='line'>      16    19200 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited
</span><span class='line'>
</span><span class='line'>Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
</span><span class='line'>    pkts      bytes target     prot opt in     out     source               destination        
</span><span class='line'>       0        0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited
</span><span class='line'>
</span><span class='line'>Chain OUTPUT (policy ACCEPT 252777 packets, 13740803 bytes)
</span><span class='line'>    pkts      bytes target     prot opt in     out     source               destination        
</span><span class='line'>
</span><span class='line'>Chain input_intranet (2 references)
</span><span class='line'>    pkts      bytes target     prot opt in     out     source               destination        
</span><span class='line'>       1       60 ACCEPT     all  --  *      *       192.168.1.111        0.0.0.0/0          
</span><span class='line'>       9      540 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing BigBlueButton]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/27/installing-bigbluebutton/"/>
    <updated>2012-08-27T20:56:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/27/installing-bigbluebutton</id>
    <content type="html"><![CDATA[<p>一直使用开源免费的 BigBlueButton 作为 Web 多人会议，文档分享讨论和桌面分享的系统。</p>

<p>BigBlueButton &#8211; Open Source Web Conferencing | www.bigbluebutton.org
<a href="http://www.bigbluebutton.org/">http://www.bigbluebutton.org/</a></p>

<p>发现 7 月份，BigBlueButton 提供基于 0.8x 的 VM 虚拟机。这比之前使用 0.7x VM 虚拟机，手动升级到 0.8 很方便。
安装过程参阅：</p>

<p><a href="http://code.google.com/p/bigbluebutton/wiki/BigBlueButtonVM">http://code.google.com/p/bigbluebutton/wiki/BigBlueButtonVM</a></p>

<p>这次安装遇到 FAQ 提到的问题，VM 虚拟机启动之后，没有正常链接到网络，没有自动安装 BigBlueButton。还好官方 FAQ 提供手动安装 BigBlueButton 的办法。</p>

<!--more-->




<blockquote><p>bbb-conf command not found<br/>When it first launches, if the BigBlueButton VM is unable to connect to the internet it will not finish the installation. You&#8217;ll see this when yo typebbb-conf command and receive the error &#8220;command not found&#8221;.<br/>The solution is to make sure the VM can connect with the internet. You should be able to<br/>   ping ubuntu.bigbluebutton.organd get a response. Once connected, do the following commands:<br/>   <br/>   sudo apt-get update</p><p>   sudo apt-get dist-upgrade</p><p>Then you can finish the installation manually by following these steps.</p><p>      sudo apt-get install bigbluebutton</p><p>       sudo apt-get install bbb-demo</p><p>        sudo bbb-conf &#8211;clean</p><p>        sudo bbb-conf &#8211;check</p><p>        sudo bbb-conf &#8211;setip <ip/hostname]]&gt;</p></blockquote>


<h5>配置 BigBlueButton</h5>

<p>可能会遇到的问题是</p>

<ol>
<li>需要开放三个防火墙端口，</li>
<li>运行 sudo bbb-conf &#8211;setip 设置 ip 地址或者域名</li>
</ol>


<p>以上问题，官方 FAQ 有详细的解决办法，必须仔细阅读。</p>

<ol>
<li>共享 word 等文档中文乱码问题
具体参阅：
BigBlueButton中乱码问题的解决 | 武汉周杰
<a href="http://www.zhojie.cn/?p=308">http://www.zhojie.cn/?p=308</a></li>
</ol>


<blockquote><p>乱码 问题的源头是由于Ubuntu系统缺少对于的中文字库TTF文件<br/>解决步骤如下：<br/>1）复制Win系统中文字体到Ubuntu系统中（Win系统字体存放路径为C:\Windows\Fonts，Ubuntu系统中字体存放路径为/usr/share/fonts）<br/>2）在Ubuntu系统字库库中创建一个目录，将Win系统中中文字体拷贝进去<br/>sudo cd /usr/share/fonts<br/>sudo mkdir myfonts<br/>sudo chmod 755 myfonts<br/>cp /win/*.ttf /usr/shar/fonts/myfonts<br/>3）建立字体缓存<br/>sudo mkfontscale<br/>sudo mkfontdir<br/>sudo fc-cache –fv<br/>4）重启Ubuntu系统<br/>/sbin/shutdown -r now<br/>注：如果不重启，将不会生效！</p></blockquote>


<h5>问题</h5>

<ol>
<li>一直采用 VM 虚拟机安装 BigBlueButton 0.7x，之后手动升级到 0.8x 的方式。
BigBlueButton 安装配置之后，一般能够稳定运行一段时间。很蹊跷的是，如果某天由于某种原因，比如关机，强制关闭，断电等等，
BigBlueButton 的 VM 虚拟机重新启动，会提示 Error: FreeSwitch fail&#8230;。</li>
</ol>


<p>即使不停重启系统，甚至用之前 VM 虚拟机的备份或者 clone 版本，重新启动虚拟机，也是类似的问题。</p>

<p>当然也有解决的办法，就是重新安装 BigBlueButton VM 虚拟机。</p>

<h5>一些希望</h5>

<ol>
<li><p>BigBlueButton 安全认证：BigBlueButton 自带一个简单的 WebDemo，可以创建 Web 会议，但无法控制谁能够或者不能够参加会议。
完整的权限需要自己二次开发实现</p></li>
<li><p>文档共享窗口比较小，无法充分使用更多屏幕空间，共享桌面的窗口更小，希望后续版本有改进。</p></li>
<li><p>比较容易基于 Ubuton 安装 BigBlueButton，CentOS 安装 BigBlueButton 比较费劲。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using tokkonopapa's octopress-tagcloud]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/26/using-tokkonopapas-octopress-tagcloud/"/>
    <updated>2012-08-26T23:39:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/26/using-tokkonopapas-octopress-tagcloud</id>
    <content type="html"><![CDATA[<h5>参阅</h5>

<p>tokkonopapa/octopress-tagcloud · GitHub
<a href="https://github.com/tokkonopapa/octopress-tagcloud">https://github.com/tokkonopapa/octopress-tagcloud</a></p>

<h5>导航栏添加 Categories 和 Tags 链接</h5>

<p>修改 source/_includes/custom/navigation.html 添加 Categories 和 Tags 链接：</p>

<figure class='code'><figcaption><span>source/_includes/custom/navigation.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;main-navigation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Blog<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/categories&quot;</span><span class="nt">&gt;</span>Categories<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/tags&quot;</span><span class="nt">&gt;</span>Tags<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/blog/archives&quot;</span><span class="nt">&gt;</span>Archives<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行 rake page 创建 source/categores 和 source/tags 目录和 html 文件：</p>

<figure class='code'><figcaption><span>source/_includes/custom/navigation.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ rake new_page[&quot;categories&quot;]
</span></code></pre></td></tr></table></div></figure>


<p>source/categories/index.markdown 内容为：</p>

<figure class='code'><figcaption><span> (index.html)</span> <a href='http://tech-blog.blogbin.info/downloads/code/octopress/categories/index.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>---
</span><span class='line'>layout: page
</span><span class='line'>title: &quot;category_list&quot;
</span><span class='line'>date: 2012-08-23 00:01
</span><span class='line'>comments: true
</span><span class='line'>sharing: true
</span><span class='line'>footer: true
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>{% category_list counter:true %}
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>source/_includes/custom/navigation.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ rake new_page[&quot;tags&quot;]
</span></code></pre></td></tr></table></div></figure>


<p>source/tags/index.markdown 内容为：</p>

<figure class='code'><figcaption><span> (index.html)</span> <a href='http://tech-blog.blogbin.info/downloads/code/octopress/tags/index.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>---
</span><span class='line'>layout: page
</span><span class='line'>title: &quot;tags&quot;
</span><span class='line'>date: 2012-08-23 00:10
</span><span class='line'>comments: true
</span><span class='line'>sharing: true
</span><span class='line'>footer: true
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>{% tag_cloud %}
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h5>相关效果如下图：</h5>

<blockquote><p><img src="http://tech-blog.blogbin.info/images/2012-08-26-using-tokkonopapas-octopress-tagcloud/header.jpeg"><br/><img src="http://tech-blog.blogbin.info/images/2012-08-26-using-tokkonopapas-octopress-tagcloud/categories.jpeg"><br/><img src="http://tech-blog.blogbin.info/images/2012-08-26-using-tokkonopapas-octopress-tagcloud/tags.jpeg"></p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using jcftang's octopress-relatedposts]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/25/using-jcftangs-octopress-relatedposts/"/>
    <updated>2012-08-25T08:33:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/25/using-jcftangs-octopress-relatedposts</id>
    <content type="html"><![CDATA[<p>参阅 jcftang/octopress-relatedposts <a href="https://github.com/jcftang/octopress-relatedposts">https://github.com/jcftang/octopress-relatedposts</a></p>

<p>其实 Octopress 已经内置了 LSI 引擎，安装和配置 octopress-relatedposts 比较简单。</p>

<blockquote><p>Firstly add this to your _config.yml file</p><p>lsi: true<br/>The create a file such as source/_includes/custom/asides/related.html with the following content</p><p>&#8230;.</p><p>It is possible to style the list, but in the above I have chosen to keep the same style as the recent posts.</p><p>Finally, add the file to your default asides list in your _config.yml file</p><p>default_asides: [custom/asides/related.html, &#8230;]</p></blockquote>




<!--more-->


<p>相关帖子效果如下图：</p>

<blockquote><p><img src="http://tech-blog.blogbin.info/images/2012-08-25-using-jcftangs-octopress-relatedposts/octopress-relatedposts.jpeg"></p></blockquote>


<p>引入   source/_includes/custom/asides/related.html
比较遗憾的时，启用 LSI 后，运行 rake generate 的时间延长了 10 倍左右。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using neerajcse's octopress-calendar-aside]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/25/using-neerajcses-octopress-calendar-aside/"/>
    <updated>2012-08-25T03:50:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/25/using-neerajcses-octopress-calendar-aside</id>
    <content type="html"><![CDATA[<p>Octopress 提供按日历归类显示文章的第三方插件。</p>

<p>参阅
neerajcse/octopress-calendar-aside · GitHub
<a href="https://github.com/neerajcse/octopress-calendar-aside">https://github.com/neerajcse/octopress-calendar-aside</a></p>

<p>按照官方文档安装和配置 octopress-calendar-aside，插件的效果显示出来了，不过有一些小遗憾。</p>

<!--more-->




<blockquote><p>All you need to do is:</p><p>add the file calendar.html to the default asides location. (.themes/classic/source/_includes/asides)<br/>add the file calendar.js to the default javascript location. (.themes/classic/source/javascript)<br/>add the calendar aside to _config.yml file. (see the config.yml in commited source)<br/>add the images prev.png and next.png to .themes/classic/source/images/. (these images are free for non-commercial purposes)</p></blockquote>


<p>官方建议将代码部署在 .themes 目录下会出现问题。访问首页或具体一篇文章时，右侧 calendar-aside 位置报错：</p>

<p>找不到 _includes/asides/calendar.html</p>

<p>我改为相关文件部署在 source 子目录，而非 .themes，重新编译后显示正常。</p>

<p>日历显示效果如下图：</p>

<blockquote><p><img src="http://tech-blog.blogbin.info/images/2012-08-25-using-neerajcses-octopress-calendar-aside/calendar-aside.jpg"></p></blockquote>


<h3>遗留问题</h3>

<p>不知道是不是我自身环境的问题，遗留了两个问题：</p>

<ol>
<li>首页右侧 aside 无法看到日历，如访问: http://tech-blog.blogbin.info。</li>
</ol>


<p>必须访问具体一篇文章右侧 aside 才能看到日历，如 http://tech-blog.blogbin.info/blog/2012/08/22/using-binarylogic-slash-settingslogic/。</p>

<ol>
<li>_config.yml 中 asides/calendar.html 必须放在 aside 的最下边位置，否则会造成 aside 余下的其它<section>无法显示</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#_config.yml
</span><span class='line'>default_asides: [ custom/asides/about.html, asides/recent_posts.html, asides/github.html,  asides/delicious.html, asides/pinboard.html, asides/googleplus.html, asides/calendar.html ]</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[installing iftop on CentOS 6]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/24/installing-iftop-on-centos-6/"/>
    <updated>2012-08-24T22:55:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/24/installing-iftop-on-centos-6</id>
    <content type="html"><![CDATA[<p>使用 iftop 简单监控服务器网络流量。安装过程如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@hj01 ~]# yum install -y wget
</span><span class='line'>
</span><span class='line'>[root@hj01 ~]# wget http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz
</span><span class='line'>
</span><span class='line'>[root@hj01 ~]# tar -xvf iftop-0.17
</span><span class='line'>
</span><span class='line'>[root@hj01 ~]# yum install -y flex byacc  libpcap　libpcap-devel ncurses ncurses-devel
</span><span class='line'>
</span><span class='line'>[root@hj01 ~]# yum install -y libpcap-devel
</span><span class='line'>
</span><span class='line'>[root@hj01 ~]# cd iftop-0.17
</span><span class='line'>
</span><span class='line'>[root@hj01 iftop-0.17]# ./configure
</span><span class='line'>
</span><span class='line'>[root@hj01 iftop-0.17]# make
</span><span class='line'>
</span><span class='line'>[root@hj01 iftop-0.17]# make install
</span><span class='line'>
</span><span class='line'>[root@hj01 iftop-0.17]# iftop</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>运行 sudo iftop 可能会出现 iftop: command not found 的情况，如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[atyun@localhost iftop-0.17]$ sudo iftop
</span><span class='line'>
</span><span class='line'>sudo: iftop: command not found</span></code></pre></td></tr></table></div></figure>


<p>明确写出 iftop 命令的完整路径，如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[atyun@localhost iftop-0.17]$ sudo /usr/local/sbin/iftop</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 git-flow 进行分支操作]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/23/using-git-flow/"/>
    <updated>2012-08-23T22:28:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/23/using-git-flow</id>
    <content type="html"><![CDATA[<p>参阅：</p>

<p>nvie/gitflow
<a href="https://github.com/nvie/gitflow/">https://github.com/nvie/gitflow/</a></p>

<p>A successful Git branching model » nvie.com
<a href="http://nvie.com/posts/a-successful-git-branching-model/">http://nvie.com/posts/a-successful-git-branching-model/</a></p>

<p>或者中文版</p>

<p>Git开发管理之道 - 无网不剩
<a href="http://blog.leezhong.com/translate/2010/10/30/a-successful-git-branch.html">http://blog.leezhong.com/translate/2010/10/30/a-successful-git-branch.html</a></p>

<p>其实 git-flow 只是对 git 分支 checkout, 创建, merge 等命令进行包装，采用推荐的命令方式来使用优秀的分支创建和合并实践策略，
避免代码改动提交混乱，对本地仓库管理的代码几乎没有影响。</p>

<p>首先要明白 master 为产品分支，develop 为开发分支。
如果你以前采用 master 为主线或开发分支，产品分支为其他分支，脑筋要转过来。</p>

<!--more-->


<p>git flow 初始化本地仓库</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ git flow init
</span><span class='line'>
</span><span class='line'>Which branch should be used for bringing forth production releases?
</span><span class='line'>   - master
</span><span class='line'>Branch name for production releases: [master]
</span><span class='line'>Branch name for "next release" development: [develop]
</span><span class='line'>
</span><span class='line'>How to name your supporting branch prefixes?
</span><span class='line'>Feature branches? [feature/]
</span><span class='line'>Release branches? [release/]
</span><span class='line'>Hotfix branches? [hotfix/]
</span><span class='line'>Support branches? [support/]
</span><span class='line'>Version tag prefix? [] TEBN
</span><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ git status
</span><span class='line'># On branch develop
</span><span class='line'>nothing to commit (working directory clean)</span></code></pre></td></tr></table></div></figure>


<p>开始一个特性(octopress-indexer)开发</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ git flow feature start octopress-indexer
</span><span class='line'>Switched to a new branch 'feature/octopress-indexer'
</span><span class='line'>
</span><span class='line'>Summary of actions:
</span><span class='line'>- A new branch 'feature/octopress-indexer' was created, based on 'develop'
</span><span class='line'>- You are now on branch 'feature/octopress-indexer'
</span><span class='line'>
</span><span class='line'>Now, start committing on your feature. When done, use:
</span><span class='line'>
</span><span class='line'>     git flow feature finish octopress-indexer</span></code></pre></td></tr></table></div></figure>


<p>结束一个特性开发</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ git flow feature finish octopress-indexer
</span><span class='line'>Switched to branch 'develop'
</span><span class='line'>Updating 024efad..6a21c04
</span><span class='line'>Fast-forward
</span><span class='line'> plugins/indexer.rb                          |  255 +++++++++++++++++++++++++++
</span><span class='line'> source/_includes/custom/asides/indexer.html |   10 ++
</span><span class='line'> 2 files changed, 265 insertions(+)
</span><span class='line'> create mode 100644 plugins/indexer.rb
</span><span class='line'> create mode 100644 source/_includes/custom/asides/indexer.html
</span><span class='line'>Deleted branch feature/octopress-indexer (was 6a21c04).
</span><span class='line'>
</span><span class='line'>Summary of actions:
</span><span class='line'>- The feature branch 'feature/octopress-indexer' was merged into 'develop'
</span><span class='line'>- Feature branch 'feature/octopress-indexer' has been removed
</span><span class='line'>- You are now on branch 'develop'</span></code></pre></td></tr></table></div></figure>


<p>手动将 develop 开发分支的改动 merge 回 master 产品分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ git checkout master
</span><span class='line'>Switched to branch 'master'
</span><span class='line'>
</span><span class='line'># 建议使用 --no-ff 选项，让 merge 也成为一个 commitment.
</span><span class='line'>blogbins-MacBook-Pro:octopress blogbin$ git merge --no-ff develop
</span><span class='line'>Merge made by the 'recursive' strategy.
</span><span class='line'> plugins/indexer.rb                          |  255 +++++++++++++++++++++++++++
</span><span class='line'> source/_includes/custom/asides/indexer.html |   10 ++
</span><span class='line'> 2 files changed, 265 insertions(+)
</span><span class='line'> create mode 100644 plugins/indexer.rb
</span><span class='line'> create mode 100644 source/_includes/custom/asides/indexer.html</span></code></pre></td></tr></table></div></figure>


<p>以上 git-flow 命令执行过程其实是对以下 git 命令的包装：</p>

<p>先基于 master 产品分支创建并切换到 develop 开发分支</p>

<p>git checkout -b develop master</p>

<p>开始开发一个新特性，基于 develop 创建新特性分支</p>

<p>git checkout -b feature/fengbin/using-git-flow develop</p>

<p>修改文件，提交文件。。。</p>

<p>切换回 develop 开发分支，将 using-git-flow 特性分支改动 merge 到 develop 开发分支</p>

<p>git checkout develop</p>

<p>git merge &#8211;no-ff feature/fengbin/using-git-flow</p>

<p>最后删除 using-git-flow 特性分支</p>

<p>git checkout -d feature/fengbin/using-git-flow develop</p>

<p>已有项目中初始化 git-flow 可能会出现以下错误：</p>

<p>Local branch &#8216;xxx&#8217; does not exist.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:app_store blogbin$ git flow init
</span><span class='line'>
</span><span class='line'>Which branch should be used for bringing forth production releases?
</span><span class='line'>   - features/favorite
</span><span class='line'>   - master
</span><span class='line'>Branch name for production releases: [master] develop
</span><span class='line'>Local branch 'develop' does not exist.</span></code></pre></td></tr></table></div></figure>


<p>查阅 git-flow 官方教程或者网络资料，不管是已有项目或者新项目，初始化 git-flow 都是相同的命令 git flow init。</p>

<p>怀疑可能是本地仓库之前已经运行过 git flow init，随后有不按 git-flow 模式创建分支所致。</p>

<h5>2012 年 8 月 27 日更新</h5>

<p>解决办法为以下任选：</p>

<ol>
<li><p>重现 git clone 远端仓库克隆出一个本地仓库，在本地仓库重新运行 git flow init。</p></li>
<li><p>手动创建 develop 开发分支，然后重新运行 git flow init</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:atyun-focus-video blogbin$ git checkout -b develop master
</span><span class='line'>Switched to a new branch 'develop'
</span><span class='line'>blogbins-MacBook-Pro:atyun-focus-video blogbin$ git checkout master
</span><span class='line'>Switched to branch 'master'
</span><span class='line'>blogbins-MacBook-Pro:atyun-focus-video blogbin$ git flow init</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using binarylogic/settingslogic]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/22/using-binarylogic-slash-settingslogic/"/>
    <updated>2012-08-22T22:00:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/22/using-binarylogic-slash-settingslogic</id>
    <content type="html"><![CDATA[<p>Rails 项目中有一些全局配置信息需要保存在文件中，采用 binarylogic/settingslogic 来管理这些配置信息：</p>

<p>参阅：</p>

<p>binarylogic/settingslogic <a href="https://github.com/binarylogic/settingslogic">https://github.com/binarylogic/settingslogic</a></p>

<p>介紹 Settingslogic | Beryllium Work <a href="http://blog.berylliumwork.com/2012/02/settingslogic.html">http://blog.berylliumwork.com/2012/02/settingslogic.html</a></p>

<p>假设 config 有配置文件：</p>

<figure class='code'><figcaption><span>settings.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">default</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="n">server_url</span><span class="p">:</span>
</span><span class='line'>    <span class="n">check_sensitive_data</span><span class="p">:</span> <span class="s2">&quot;http://localhst:3000/bad_word_checker/check.json&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">development</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="n">server_url</span><span class="p">:</span>
</span><span class='line'>    <span class="n">check_sensitive_data</span><span class="p">:</span> <span class="s2">&quot;http://localhst:3001/bad_word_checker/check.json&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="n">server_url</span><span class="p">:</span>
</span><span class='line'>    <span class="n">check_sensitive_data</span><span class="p">:</span> <span class="s2">&quot;http://localhst:3002/bad_word_checker/check.json&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">production</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="n">server_url</span><span class="p">:</span>
</span><span class='line'>    <span class="n">check_sensitive_data</span><span class="p">:</span> <span class="s2">&quot;http://localhst:3003/bad_word_checker/check.json&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>访问配置信息的代码比较丑陋，如</p>

<figure class='code'><figcaption><span>settings.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SYS_CONFIG</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;config/sys_config.yml&quot;</span><span class="p">))</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="no">SYS_CONFIG</span><span class="o">[</span><span class="s2">&quot;server_url&quot;</span><span class="o">][</span><span class="s2">&quot;check_sensitive_data&quot;</span><span class="o">]</span>     <span class="c1"># =&gt; &quot;http://localhst:3001/bad_word_checker/check.json&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果采用 settingslogic，先创建 settings.rb 文件</p>

<figure class='code'><figcaption><span>app/model/settings.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># encoding: UTF-8</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#binarylogic/settingslogic</span>
</span><span class='line'><span class="c1">#https://github.com/binarylogic/settingslogic</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Settings</span> <span class="o">&lt;</span> <span class="no">Settingslogic</span>
</span><span class='line'>  <span class="n">source</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/config/settings.yml&quot;</span>
</span><span class='line'>  <span class="n">namespace</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过 Settings 来访问配置信息，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="no">Settings</span><span class="o">.</span><span class="n">server_url</span><span class="o">.</span><span class="n">check_sensitive_data</span>    <span class="c1"># =&gt; &quot;http://localhst:3001/bad_word_checker/check.json&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>看看，不需要指定 yml 文件和 env 环境，非常容易。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monitoring server performance with New Relic]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/22/monitoring-server-performance-with-new-relic/"/>
    <updated>2012-08-22T21:21:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/22/monitoring-server-performance-with-new-relic</id>
    <content type="html"><![CDATA[<p>使用 New Relic 监控服务端性能，优点：</p>

<ol>
<li><p>免费帐号可以监控任意数量服务器常规性能指标，如 CPU, Memory, DISK, I/O 和 Network；</p></li>
<li><p>被监控的服务器采用 rpm + yum 方式安装监控代理，安装无损系统；</p></li>
<li><p>监控数据主动发送到 New Relic，一般无需调整防火墙策略；</p></li>
<li><p>New Relic 和 Rails 核心团队合作，可以深入监控 Rails 项目执行情况（如页面执行耗时，SQL 执行耗时等），但这需要收费，或者申请试用一段时间；</p></li>
</ol>


<p>和 Zabbix 相比，省去本地安装监控中心的工作，本地监控代理安装也非常简单。</p>

<p>参阅：
Web Application Performance Management (APM) : New Relic
<a href="www.newrelic.com">www.newrelic.com</a></p>

<!--more-->


<h5>1. 监控服务器</h5>

<p>安装监控代理过程非常简单，以 CentOS 6.2 为例，执行以下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rpm -Uvh http://download.newrelic.com/pub/newrelic/el5/i386/newrelic-repo-5-3.noarch.rpm
</span><span class='line'>
</span><span class='line'>sudo yum install -y newrelic-sysmond
</span><span class='line'>
</span><span class='line'># 其中 a56esdse7cfdsfa5a49fbfdsdsfdsd1wewfwfew28 为您的监控 license_key
</span><span class='line'>sudo nrsysmond-config --set license_key=a56esdse7cfdsfa5a49fbfdsdsfdsd1wewfwfew28
</span><span class='line'>
</span><span class='line'>sudo /etc/init.d/newrelic-sysmond start</span></code></pre></td></tr></table></div></figure>


<h5>2. 监控 Rails 项目</h5>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;newrelic_rpm&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行 bundle install</p>

<p>将 New Relic 提供的 newrelic.yml 部署在 config 目录</p>

<p>最后按开发模式启动 Rails 项目</p>

<p>浏览器访问 <a href="http://localhost:3000/newrelic">http://localhost:3000/newrelic</a>，效果如下：</p>

<blockquote><p><img src="http://tech-blog.blogbin.info/images/2012-08-22-monitoring-server-performance-with-new-relic/new_relic_development.jpg"></p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 返回 json 格式的内容]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/20/dhhs-json-jbuilder-at-rails/"/>
    <updated>2012-08-20T23:51:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/20/dhhs-json-jbuilder-at-rails</id>
    <content type="html"><![CDATA[<p>需要在 Rails 返回 json 格式的内容。虽然 Ruby 或者 Rails 内置对对象转为 json 的支持。
但对于自定义的 json 格式和内容。 推荐使用 DHH 开发的Gem：</p>

<p>rails/jbuilder
<a href="https://github.com/rails/jbuilder">https://github.com/rails/jbuilder</a></p>

<p>RailsCasts 网站有一份教程，可以作为学习的补充
320 Jbuilder - RailsCasts
<a href="http://railscasts.com/episodes/320-jbuilder?view=asciicast">http://railscasts.com/episodes/320-jbuilder?view=asciicast</a></p>

<p>其实之前已经使用 ails/jbuilder 返回 json 格式内容，但一段时间没用，结果又碰到同样问题。</p>

<p>访问 url 时，系统后台报错：
undefined local variable or method `json&#8217;</p>

<p>结果发现，原来是 渲染的模版扩展名不小心写错了，正确的是 .json.jbuilder；
而我不小心写成了 .json.builder（xml 格式渲染模版的扩展名）。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Started GET "/security/authorizations/lookup.json" for 127.0.0.1 at 2012-08-20 23:38:40 +0800
</span><span class='line'>ActionView::Template::Error - undefined local variable or method `json' for #&lt;#&lt;Class:0x007fde54624320&gt;:0x007fde5461e6a0&gt;:
</span><span class='line'>     /Users/blogbin/projects/workspaces/app_store/ruby/xbmc/app/views/security/authorizations/lookup.json.builder:2:in `_app_views_security_authorizations_lookup_json_builder___4549964192266964499_70296437709400'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/template.rb:144:in `block in render'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications.rb:55:in `instrument'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/template.rb:142:in `render'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/renderer/template_renderer.rb:40:in `block (2 levels) in render_template'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications.rb:53:in `block in instrument'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications/instrumenter.rb:21:in `instrument'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications.rb:53:in `instrument'
</span><span class='line'>     /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sinaweibo python sdk]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/18/sinaweibo-python-sdk/"/>
    <updated>2012-08-18T20:57:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/18/sinaweibo-python-sdk</id>
    <content type="html"><![CDATA[<p>Python 客户端需要访问新浪微博 API，参照官方推荐的 Python SDK：</p>

<p><a href="http://michaelliao.github.com/sinaweibopy/">http://michaelliao.github.com/sinaweibopy/d</a></p>

<p>发现自己使用的 Python 版本为 2.4，不支持 if &#8230; then 同在一行的语法。调整举例：</p>

<figure class='code'><figcaption><span>weibo.py </span><a href='https://github.com/blogbin/sinaweibopy/raw/9ea1bf949dbdf49153b50e9a2c787847d348fc9e/src/weibo.py'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#data.append(v.encode(&#39;utf-8&#39;) if isinstance(v, unicode) else v)</span>
</span><span class='line'><span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">v</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">))</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span> <span class="n">v</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 GitHub 发起一个 Pull Request 请求：</p>

<p><a href="https://github.com/michaelliao/sinaweibopy/pull/2">https://github.com/michaelliao/sinaweibopy/pull/2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gem install RMagick on Apple MacOS X Mountain Lion 10.8]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/18/gem-install-rmagick-on-apple-macos-x-mountain-lion-10-dot-8/"/>
    <updated>2012-08-18T20:14:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/18/gem-install-rmagick-on-apple-macos-x-mountain-lion-10-dot-8</id>
    <content type="html"><![CDATA[<p>最近升级了 Mountain Lion 10.8，结果发现使用 RMagick 的 Rails 项目无法正常启动，碉堡了！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blogbins-MacBook-Pro:xbmc blogbin$ rails server
</span><span class='line'>:macosx
</span><span class='line'>WARNING: Nokogiri was built against LibXML version 2.7.3, but has dynamically loaded 2.7.8
</span><span class='line'>/Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:240:in `require': dlopen(/Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/RMagick2.bundle, 9): Library not loaded: /usr/lib/libltdl.7.dylib (LoadError)
</span><span class='line'>  Referenced from: /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/RMagick2.bundle
</span><span class='line'>  Reason: Incompatible library version: RMagick2.bundle requires version 10.0.0 or later, but libltdl.7.dylib provides version 5.0.0 - /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/RMagick2.bundle
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:240:in `block in require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:223:in `block in load_dependency'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:640:in `new_constants_in'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:223:in `load_dependency'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:240:in `require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/rmagick.rb:11:in `&lt;top (required)&gt;'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:68:in `require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:68:in `block (2 levels) in require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:66:in `each'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:66:in `block in require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:55:in `each'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:55:in `require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler.rb:119:in `require'
</span><span class='line'>     from /Users/blogbin/projects/workspaces/app_store/ruby/xbmc/config/application.rb:7:in `&lt;top (required)&gt;'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:52:in `require'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:52:in `block in &lt;top (required)&gt;'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:49:in `tap'
</span><span class='line'>     from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:49:in `&lt;top (required)&gt;'
</span><span class='line'>     from script/rails:6:in `require'
</span><span class='line'>     from script/rails:6:in `&lt;main&gt;</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Google 搜索了不少帖子，大部分都只是解决一部分问题，又冒出新的问题
最后终于找到一篇介绍完整的解决的办法。</p>

<p><a href="http://coderwall.com/p/njrnzq">http://coderwall.com/p/njrnzq</a></p>

<!--more-->




<blockquote><p>Managed to fix it following these steps:</p><p>Installed XCode 4.4 and Command Line Tools<br/>Ran this in terminal:</p><p>sudo chown -R <user> /usr/local<br/>brew update<br/>brew tap homebrew/dupes<br/>brew install apple-gcc42</p><p>Installed XQuartz 2.7.2 (http://xquartz.macosforge.org/landing)</p><p>Fixed any errors reported by brew doctor<br/>Ran this in terminal:</p><p>gem uninstall rmagick<br/>brew uninstall imagemagick<br/>brew install &#8211;fresh imagemagick<br/>gem install rmagick</p><p>After this, RMagick worked flawlessly again!</p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[softwareishard's introduction to firebug net panel]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/17/softwareishards-introduction-to-firebug-net-panel/"/>
    <updated>2012-08-17T23:06:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/17/softwareishards-introduction-to-firebug-net-panel</id>
    <content type="html"><![CDATA[<p>Firebug 监控浏览器的网络请求，softwareishard 网站有很详细的介绍。</p>

<p><a href="http://www.softwareishard.com/blog/firebug/introduction-to-firebug-net-panel/">http://www.softwareishard.com/blog/firebug/introduction-to-firebug-net-panel/</a></p>

<p><a href="http://www.softwareishard.com/blog/firebug/firebug-net-panel-timings/">http://www.softwareishard.com/blog/firebug/firebug-net-panel-timings/</a></p>

<p>甚至比 Firebug 官方 Wiki <a href="http://getfirebug.com/wiki/index.php/Net_Panel">http://getfirebug.com/wiki/index.php/Net_Panel</a> 都要详细。</p>

<p>特别留意一下 DomContentLoaded event 和 load event 代表的意思，其它都比较好理解。</p>

<blockquote><p>DomContentLoaded event <br/>- time when DomContentLoad event was fired (since the beginning of the request, can be negative if the request has been started after the event)</p><p>load event <br/>- time when page load event was fired (since the beginning of the request, can be negative if the request has been started after the event)</p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby元编程 - 逸光 - 我信仰超越光的不是物质，是思维]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/17/metaprogramming-ruby/"/>
    <updated>2012-08-17T09:36:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/17/metaprogramming-ruby</id>
    <content type="html"><![CDATA[<p>参阅：
逸光 <a href="http://deathking.is-programmer.com/">http://deathking.is-programmer.com//</a></p>

<p>Ruby元编程 - 逸光 - 我信仰超越光的不是物质，是思维 <a href="http://deathking.is-programmer.com/posts/28864.html">http://deathking.is-programmer.com/posts/28864.html</a></p>

<h5>1. 慎用 eval</h5>

<blockquote><p>一般来说，能避免 eval 就尽量避免，因为 eval 有额外的“分析时”开销（将字符串作为源代码进行词法、文法分析），而这个“剖析时”却又是在程序“运行时”进行的。把不需要惰性求值的表达式预先进行及早求值，能避免一些分析时开销。如果可能的话，用 instance_exec，或 instance_eval 带块的形式，也比直接在字符串上求值好。</p></blockquote>




<!--more-->


<h5>2. 一句话明了 class_eval 的区别</h5>

<blockquote><p>当作用于类时，class_eval将会定义实例方法，而instance_eval定义类方法。</p></blockquote>


<h5>3. class_variables 操作的是类变量，而非类实例变量</h5>

<blockquote><p>1.3.9 class_variables <br/>　　如果你想知道一个类中有哪些类变量，我们可以使用class_varibles方法。他返回一个数组（Array），以符号（Symbol）的形式返回类变量的名称。<br/><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/><span class='line-number'>3</span><br/><span class='line-number'>4</span><br/><span class='line-number'>5</span><br/><span class='line-number'>6</span><br/><span class='line-number'>7</span><br/><span class='line-number'>8</span><br/><span class='line-number'>9</span><br/><span class='line-number'>10</span><br/><span class='line-number'>11</span><br/><span class='line-number'>12</span><br/></pre></td><td class='code'><pre><code class=''><span class='line'>classRubyist<br/></span><span class='line'>  @@geek="Ruby's Matz"<br/></span><span class='line'>  @@country="USA"<br/></span><span class='line'>end<br/></span><span class='line'> <br/></span><span class='line'><br/></span><span class='line'>classChild &lt; Rubyist<br/></span><span class='line'>  @@city="Nashville"<br/></span><span class='line'>end<br/></span><span class='line'>print Rubyist.class_variables# =&gt; [:@@geek, :@@country]<br/></span><span class='line'>puts<br/></span><span class='line'>p Child.class_variables# =&gt; [:@@city]</span></code></pre></td></tr></table></div></figure><br/>　　你可以从程序的输出中观察到Child.class_variables输出的是在Child类中定义的类变量（@@city）。Child类没有从父类中继承类变量（@@geek, @@country）。</p></blockquote>


<h5>4. 常量操作 const_get 和 const_set</h5>

<blockquote><p>1.3.11 const_get, const_set</p><p>　　类似的，const_get和const_set用于操作常量。const_get返回指定常量的值：</p><p><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="nb">Float</span><span class="o">.</span><span class="n">const_get</span><span class="p">(</span><span class="ss">:MIN</span><span class="p">)</span> <span class="c1"># =&gt; 2.2250738585072e-308</span><br/></span></code></pre></td></tr></table></div></figure><br/>　　const_set为指定的常量设置指定的值，并返回该对象。如果常量不存在，那么他会创建该常量，就是下面示范的那样：<br/><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/><span class='line-number'>3</span><br/><span class='line-number'>4</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Rubyist</span><br/></span><span class='line'><br/></span><span class='line'><span class="k">end</span><br/></span><span class='line'><span class="nb">puts</span> <span class="no">Rubyist</span><span class="o">.</span><span class="n">const_set</span><span class="p">(</span><span class="s2">&quot;PI&quot;</span><span class="p">,</span> <span class="mi">22</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span> <span class="c1"># =&gt; 3.14285714285714</span><br/></span></code></pre></td></tr></table></div></figure></p><p>　　因为const_get返回常量的值，因此，你可以使用此方法获得一个类的名字并为这个类添加一个新的实例化对象的方法。这样使得我们有能力在运行时创建类并实例化其实例。<br/><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/><span class='line-number'>3</span><br/><span class='line-number'>4</span><br/><span class='line-number'>5</span><br/><span class='line-number'>6</span><br/><span class='line-number'>7</span><br/><span class='line-number'>8</span><br/><span class='line-number'>9</span><br/><span class='line-number'>10</span><br/><span class='line-number'>11</span><br/><span class='line-number'>12</span><br/><span class='line-number'>13</span><br/><span class='line-number'>14</span><br/><span class='line-number'>15</span><br/><span class='line-number'>16</span><br/><span class='line-number'>17</span><br/><span class='line-number'>18</span><br/><span class='line-number'>19</span><br/><span class='line-number'>20</span><br/><span class='line-number'>21</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Let us call our new class &#39;Rubyist&#39;</span><br/></span><span class='line'><span class="c1"># (we could have prompted the user for a class name)</span><br/></span><span class='line'><span class="n">class_name</span> <span class="o">=</span> <span class="s2">&quot;rubyist&quot;</span><span class="o">.</span><span class="n">capitalize</span><br/></span><span class='line'><br/></span><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">const_set</span><span class="p">(</span><span class="n">class_name</span><span class="p">,</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><br/></span><span class='line'><br/></span><span class='line'><span class="c1"># Let us create a method &#39;who&#39;</span><br/></span><span class='line'><span class="c1"># (we could have prompted the user for a method name)</span><br/></span><span class='line'><span class="n">class_name</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">const_get</span><span class="p">(</span><span class="n">class_name</span><span class="p">)</span><br/></span><span class='line'><br/></span><span class='line'><span class="nb">puts</span> <span class="n">class_name</span> <span class="c1"># =&gt; Rubyist</span><br/></span><span class='line'><br/></span><span class='line'><span class="n">class_name</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span><br/></span><span class='line'><br/></span><span class='line'>  <span class="n">define_method</span> <span class="ss">:who</span> <span class="k">do</span> <span class="o">|</span><span class="n">my_arg</span><span class="o">|</span><br/></span><span class='line'><br/></span><span class='line'>    <span class="n">my_arg</span><br/></span><span class='line'>  <span class="k">end</span><br/></span><span class='line'><span class="k">end</span><br/></span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="n">class_name</span><span class="o">.</span><span class="n">new</span><br/></span><span class='line'><span class="nb">puts</span> <span class="n">obj</span><span class="o">.</span><span class="n">who</span><span class="p">(</span><span class="s1">&#39;Matz&#39;</span><span class="p">)</span> <span class="c1"># =&gt; Matz</span><br/></span></code></pre></td></tr></table></div></figure></p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hisea's Ruby和元编程的故事 - 第2回: 类与模块，Ruby的绝代双骄]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/16/a-story-about-ruby-and-metaprogramming-ruby-2/"/>
    <updated>2012-08-16T16:22:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/16/a-story-about-ruby-and-metaprogramming-ruby-2</id>
    <content type="html"><![CDATA[<p>参阅：
Hisea <a href="http://hisea.me/">http://hisea.me/</a></p>

<p>Ruby和元编程的故事 - 第2回: 类与模块，Ruby的绝代双骄 <a href="http://ruby-china.org/topics/1581">http://ruby-china.org/topics/1581</a></p>

<h5>1. 注意向已有的常量再次赋值很容易引起错误，所以 Ruby 语言会自动警告提示该情况</h5>

<p>有很多名字，比如单例类，估计是因为 eigenclass 本体类很容易就解决设计模式的单例，结果就误传下来了。</p>

<blockquote><p>实际上，如果已经存在一个同名常量，Ruby会重新使用那个常量,如果常量不是class就会报错>> Test = 2<br/><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/><span class='line-number'>3</span><br/><span class='line-number'>4</span><br/><span class='line-number'>5</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=&gt;</span> <span class="mi">2</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">class</span> <span class="nc">Test</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">end</span><br/></span><span class='line'><span class="no">TypeError</span><span class="p">:</span> <span class="no">Test</span> <span class="n">is</span> <span class="ow">not</span> <span class="n">a</span> <span class="k">class</span><br/></span><span class='line'><span class="n">from</span> <span class="p">(</span><span class="n">irb</span><span class="p">):</span><span class="mi">2</span><br/></span></code></pre></td></tr></table></div></figure></p></blockquote>




<!--more-->


<h5>2. Module 的模块方法可以直接被调用</h5>

<blockquote><p>module的方法有两种，一种是module方法，这类方法可以直接调用。<br/><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/><span class='line-number'>3</span><br/><span class='line-number'>4</span><br/><span class='line-number'>5</span><br/><span class='line-number'>6</span><br/><span class='line-number'>7</span><br/><span class='line-number'>8</span><br/><span class='line-number'>9</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="k">module</span> <span class="nn">Test</span><br/></span><span class='line'><span class="o">&gt;&gt;</span>   <span class="k">def</span> <span class="nc">Test</span><span class="o">.</span><span class="nf">test_method</span><br/></span><span class='line'><span class="o">&gt;&gt;</span>     <span class="nb">puts</span> <span class="s2">&quot;hello from module&quot;</span><br/></span><span class='line'><span class="o">&gt;&gt;</span>   <span class="k">end</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">end</span><br/></span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Test</span><span class="o">::</span><span class="n">test_method</span><br/></span><span class='line'><span class="n">hello</span> <span class="n">from</span> <span class="n">module</span><br/></span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span><br/></span></code></pre></td></tr></table></div></figure></p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hisea's Ruby和元编程的故事 - 第1回: 色色空空，万物皆为对象]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/16/a-story-about-ruby-and-programming-ruby-1/"/>
    <updated>2012-08-16T08:01:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/16/a-story-about-ruby-and-programming-ruby-1</id>
    <content type="html"><![CDATA[<p>参阅：
Hisea <a href="http://hisea.me/">http://hisea.me/</a></p>

<p>Ruby和元编程的故事 - 第0回: 欲练神功，必先自废武功 <a href="http://ruby-china.org/topics/1171">http://ruby-china.org/topics/1171</a></p>

<h5>1. 官方说法是 eigenclass 本体类</h5>

<p>有很多名字，比如单例类，估计是因为 eigenclass 本体类很容易就解决设计模式的单例，结果就误传下来了。</p>

<blockquote><p>Singleton/Meta/Anonymous/Ghost/Shadow Class</p><p>   * Singleton Class: 单例类<br/>   * Meta Class：元类<br/>   * Anonymous Class: 匿名类<br/>   * Ghost Class：鬼类<br/>   * Shadow Class: 影子类<br/>上面的这些东东其实说的都是一个东西，我喜欢叫它 影子类。</p></blockquote>




<!--more-->


<h5>2. 关于 Object#dup 和 Object#clone 的区别</h5>

<blockquote><p>对象的复制<br/>前文说对象的存在包括两部分，一是状态/实例变量，另一个是行为，本回专注讲了单例方法和影子类。</p><p>Ruby中对象的复制也有两种模式，一个是只复制当前的状态/实例变量 dup。另外一种是连同影子类和引用的对象一起复制，从而把单例方法也复制一份。<br/><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/><span class='line-number'>3</span><br/><span class='line-number'>4</span><br/><span class='line-number'>5</span><br/><span class='line-number'>6</span><br/><span class='line-number'>7</span><br/><span class='line-number'>8</span><br/><span class='line-number'>9</span><br/><span class='line-number'>10</span><br/><span class='line-number'>11</span><br/><span class='line-number'>12</span><br/><span class='line-number'>13</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;obj&quot;</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">def</span> <span class="nc">a</span><span class="o">.</span><span class="nf">hello_self</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="s2">&quot;hello </span><span class="si">#{</span><span class="nb">self</span><span class="si">}</span><span class="s2">&quot;</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">end</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">dup</span><br/></span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;obj&quot;</span><br/></span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">b</span><span class="o">.</span><span class="n">hello_self</span><br/></span><span class='line'><span class="no">NoMethodError</span><span class="p">:</span> <span class="n">undefined</span> <span class="nb">method</span> <span class="sb">`hello_self&#39; for &quot;obj&quot;:String</span><br/></span><span class='line'><span class="sb">    from (irb):90</span><br/></span><span class='line'><span class="sb">&gt;&gt; b = a.clone</span><br/></span><span class='line'><span class="sb">=&gt; &quot;obj&quot;</span><br/></span><span class='line'><span class="sb">&gt;&gt; b.hello_self</span><br/></span><span class='line'><span class="sb">hello obj</span><br/></span></code></pre></td></tr></table></div></figure></p><p>其实有本回上述的这些功能，即便是没有class，Ruby也可以作为一种Prototype(类似JavaScript)的面向对象语言了。</p><p>你可以建立一个对象，生成默认的实例变量，把行为作为单例方法定以在这个对象的影子类上，然后用clone生成千千万万个实例。当然这样比较麻烦，但却是可行的途径之一。</p><p>其他Object API<br/>对象还有很多其他的功能，比如可以freeze,另外dup跟clone也有一些其他的引用上面的区别，dup只复制引用，clone会吧引用的对象也复制。</p><p>这些都可以在Object类(Ruby所有对象的父类)API上找到，可以查看apidock.com的文档</p><p>例如关于dup</p><p>.dup() produces a shallow copy of obj—the instance variables of obj are copied, but not the objects they reference. dup copies the tainted state of obj. See also the discussion under Object#clone. In general, clone and dup may have different semantics in descendant classes. While clone is used to duplicate an object, including its internal state, dup typically uses the class of the descendant object to create the new instance.</p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby和元编程的故事 - 第0回: 欲练神功，必先自废武功]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/16/a-story-about-ruby-and-metaprogramming-ruby-1/"/>
    <updated>2012-08-16T08:01:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/16/a-story-about-ruby-and-metaprogramming-ruby-1</id>
    <content type="html"><![CDATA[<p>参阅：
Hisea <a href="http://hisea.me/">http://hisea.me/</a>
的Ruby和元编程的故事 - 第0回: 欲练神功，必先自废武功</p>

<p>介绍了 Ruby 和元编程的一些特点，主要是在一些思维上的改变，特别是从 Java 等其它语言过来的人。</p>

<p><a href="http://ruby-china.org/topics/1171">http://ruby-china.org/topics/1171</a></p>

<h5>1. 注意动态语言和动态类型的区别，动态类型仅为动态语言其中一个部分。</h5>

<blockquote><p>动态语言:<br/>动态语言的定义还很模糊，很多人把动态语言跟动态类型语言搞混，对于Hisea来说，动态语言就是类，方法，及其他定义可以在运行时进行改变，元编程就是利用这一特性。由此可见，动态语言跟动态类型语言并不是一个概念.</p></blockquote>




<!--more-->


<h5>2. 推崇模块混入或者扩展的方式增加 API 功能，而非事事皆继承。</h5>

<p>ps: 打开类也是一种途径。</p>

<blockquote><p>父类的作用仅仅是定义了API的存在，这在Java中是非常常见的，可是在Ruby中，这个父类其实存在的意义不是特别大。Ruby更倾向于,任何能起飞(拥有‘起飞’方法)的对象都是飞行器，而不是任何继承飞行器的类的对象。</p><p>  1. 需要用继承分享代码么？ ActiveRecord需要你继承ActiveRecord::Base,例如:<br/><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span><br/><span class='line-number'>2</span><br/></pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><br/></span><span class='line'><span class="k">end</span><br/></span></code></pre></td></tr></table></div></figure><br/>Hisea本人觉得类似Mongoid的Mixin方式更适合解决类似的问题。 Post从设计逻辑上来讲,跟ActiveRecord::Base没有半毛钱关系。继承关系完全用于分享代码，而在Ruby中，更好的分享代码的办法是用Mixin.</p></blockquote>


<h5>3. 个人认为 UML 仍是需要的</h5>

<p>特别是项目中涉及到十几以上模型的时候，模型相互之间关系通过 UML 等方式更容易展现。关键是要及时更新和维护。</p>

<blockquote><p>4,忘记UML(或其他)设计大法<br/>这个话题是3的继续，公司新招了一个Ruby程序员，他来了一两个星期后问了个问题，问为什么公司(或者其他Ruby程序员)不爱用UML之类的设计工具，当时我也一时找不出答案，后来开车回家的路上用半个小时想明白了，UML是一个类只见关系的静态表示，Ruby运行时的情况却是不停在变幻。用静态去表示动态，自然捉襟见肘。</p></blockquote>


<h5>4. 好的 IDE 对 Ruby 开发有一定好处的</h5>

<p>比如  RubyMine :</p>

<ol>
<li>调试功能不错，可以运行时调试，设置断点，查看变量。。。</li>
<li>支持一定类，模块，动法以及变量的查找，遇上 IDE 无法直接识别的，会列一个清单让用户选择</li>
</ol>


<p>唯一不好的地方就是，RubyMine 是用 Java 做的，占内存，运行有时会卡，最好机器配置为 intel Core i5，8 G 内存以上，用 SSD 固态硬盘更好。</p>

<blockquote><p>5.为什么不用IDE?<br/>很多从Java阵营转来，尤其是有多年eclipse经验的Ruby初学者尤其是经常爱问，Ruby用什么IDE。</p><p><br/>得到的回答往往是text mate,vim,sublime text 2等等文本编辑器。</p><p><br/>很多人可能纳闷，为什么Ruby/Rails没有一个IDE占领大片江山的情况，为什么Netbeans／Eclipse再Ruby开发阵营中没有其他语言开发占的地位重要。</p><p>其实答案很简单。</p><p><br/>  1. IDE最讨喜的功能是什么？</p><p><br/>很多用惯了IDE开发的Java程序员甚至XCode程序员，都会说最爱的功能是代码不全，object之后按一下&#8217;.&#8217;立马生成一个方法列表。转到Ruby用文本编辑器，没有这个功能，很是郁闷。其实道理很简单，如果方法都是动态生成的，在写程序的时候怎么能给出一个列表呢。</p><p><br/>  2. Debugger还是必要工具么？</p><p><br/>静态语言开发，调试是居家旅行杀人灭口必备良药。而IDE又是调试的好帮手。</p><p>Ruby／Rails的Debugger还没那么成熟，而且如果用logger, raise在适当的地方输出inspect, to_yaml等内容，也可以很容易的找到错误。</p><p><br/>  3. Eclipse可以很好的配置Java开发环境。</p><p>Ruby/Rails有好用的RVM,RubyGems,Bundler.</p><p><br/>所以，不补全，不调试，不配环境，要IDE不也是拿来当文本编辑器用么</p></blockquote>

]]></content>
  </entry>
  
</feed>
