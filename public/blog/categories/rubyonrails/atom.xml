<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RubyOnRails | Tech.Blogbin's Blog]]></title>
  <link href="http://tech-blog.blogbin.info/blog/categories/rubyonrails/atom.xml" rel="self"/>
  <link href="http://tech-blog.blogbin.info/"/>
  <updated>2012-08-23T00:11:39+08:00</updated>
  <id>http://tech-blog.blogbin.info/</id>
  <author>
    <name><![CDATA[Tech Blogbin ]]></name>
    <email><![CDATA[Tech Blogbin <tech.blogbin@gmail.com>]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using binarylogic/settingslogic]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/22/using-binarylogic-slash-settingslogic/"/>
    <updated>2012-08-22T22:00:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/22/using-binarylogic-slash-settingslogic</id>
    <content type="html"><![CDATA[<p>Rails 项目中有一些全局配置信息需要保存在文件中，采用 binarylogic/settingslogic 来管理这些配置信息：</p>

<p>参阅：</p>

<p>binarylogic/settingslogic <a href="https://github.com/binarylogic/settingslogic">https://github.com/binarylogic/settingslogic</a></p>

<p>介紹 Settingslogic | Beryllium Work <a href="http://blog.berylliumwork.com/2012/02/settingslogic.html">http://blog.berylliumwork.com/2012/02/settingslogic.html</a></p>

<p>假设 config 有配置文件：
``` ruby settings.yml
default: *default
  server_url:</p>

<pre><code>check_sensitive_data: "http://localhst:3000/bad_word_checker/check.json"
</code></pre>

<p>development:
  &lt;&lt;: *default
  server_url:</p>

<pre><code>check_sensitive_data: "http://localhst:3001/bad_word_checker/check.json" 
</code></pre>

<p>test:
  &lt;&lt;: *default
  server_url:</p>

<pre><code>check_sensitive_data: "http://localhst:3002/bad_word_checker/check.json" 
</code></pre>

<p>production:
  &lt;&lt;: *default
  server_url:</p>

<pre><code>check_sensitive_data: "http://localhst:3003/bad_word_checker/check.json" 
</code></pre>

<p>```</p>

<!--more-->


<p>访问配置信息的代码比较丑陋，如
``` ruby settings.rb
SYS_CONFIG = YAML.load_file(Rails.root.join("config/sys_config.yml"))[Rails.env]</p>

<p>puts SYS_CONFIG["server_url"]["check_sensitive_data"]     # => "http://localhst:3001/bad_word_checker/check.json"
```</p>

<p>如果采用 settingslogic，先创建 settings.rb 文件
``` ruby app/model/settings.rb</p>

<h1>encoding: UTF-8</h1>

<h1>binarylogic/settingslogic</h1>

<h1>https://github.com/binarylogic/settingslogic</h1>

<p>class Settings &lt; Settingslogic
  source "#{Rails.root}/config/settings.yml"
  namespace Rails.env
end
```</p>

<p>通过 Settings 来访问配置信息，如：
<code>ruby
puts Settings.server_url.check_sensitive_data    # =&gt; "http://localhst:3001/bad_word_checker/check.json"
</code></p>

<p>看看，不需要指定 yml 文件和 env 环境，非常容易。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 返回 json 格式的内容]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/20/dhhs-json-jbuilder-at-rails/"/>
    <updated>2012-08-20T23:51:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/20/dhhs-json-jbuilder-at-rails</id>
    <content type="html"><![CDATA[<p>需要在 Rails 返回 json 格式的内容。虽然 Ruby 或者 Rails 内置对对象转为 json 的支持。
但对于自定义的 json 格式和内容。 推荐使用 DHH 开发的Gem：</p>

<p>rails/jbuilder
<a href="https://github.com/rails/jbuilder">https://github.com/rails/jbuilder</a></p>

<p>RailsCasts 网站有一份教程，可以作为学习的补充
320 Jbuilder - RailsCasts
<a href="http://railscasts.com/episodes/320-jbuilder?view=asciicast">http://railscasts.com/episodes/320-jbuilder?view=asciicast</a></p>

<p>其实之前已经使用 ails/jbuilder 返回 json 格式内容，但一段时间没用，结果又碰到同样问题。</p>

<p>访问 url 时，系统后台报错：
undefined local variable or method `json'</p>

<p>结果发现，原来是 渲染的模版扩展名不小心写错了，正确的是 .json.jbuilder；
而我不小心写成了 .json.builder（xml 格式渲染模版的扩展名）。</p>

<p><code>``
Started GET "/security/authorizations/lookup.json" for 127.0.0.1 at 2012-08-20 23:38:40 +0800
ActionView::Template::Error - undefined local variable or method</code>json' for #&lt;#&lt;Class:0x007fde54624320>:0x007fde5461e6a0>:</p>

<pre><code> /Users/blogbin/projects/workspaces/app_store/ruby/xbmc/app/views/security/authorizations/lookup.json.builder:2:in `_app_views_security_authorizations_lookup_json_builder___4549964192266964499_70296437709400'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/template.rb:144:in `block in render'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications.rb:55:in `instrument'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/template.rb:142:in `render'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/renderer/template_renderer.rb:40:in `block (2 levels) in render_template'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/actionpack-3.1.0/lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications.rb:53:in `block in instrument'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications/instrumenter.rb:21:in `instrument'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/notifications.rb:53:in `instrument'
 /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gem install RMagick on Apple MacOS X Mountain Lion 10.8]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/18/gem-install-rmagick-on-apple-macos-x-mountain-lion-10-dot-8/"/>
    <updated>2012-08-18T20:14:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/18/gem-install-rmagick-on-apple-macos-x-mountain-lion-10-dot-8</id>
    <content type="html"><![CDATA[<p>最近升级了 Mountain Lion 10.8，结果发现使用 RMagick 的 Rails 项目无法正常启动，碉堡了！</p>

<p><code>``
blogbins-MacBook-Pro:xbmc blogbin$ rails server
:macosx
WARNING: Nokogiri was built against LibXML version 2.7.3, but has dynamically loaded 2.7.8
/Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:240:in</code>require': dlopen(/Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/RMagick2.bundle, 9): Library not loaded: /usr/lib/libltdl.7.dylib (LoadError)
  Referenced from: /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/RMagick2.bundle
  Reason: Incompatible library version: RMagick2.bundle requires version 10.0.0 or later, but libltdl.7.dylib provides version 5.0.0 - /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/RMagick2.bundle</p>

<pre><code> from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:240:in `block in require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:223:in `block in load_dependency'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:640:in `new_constants_in'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:223:in `load_dependency'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/activesupport-3.1.0/lib/active_support/dependencies.rb:240:in `require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/rmagick-2.13.1/lib/rmagick.rb:11:in `&lt;top (required)&gt;'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:68:in `require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:68:in `block (2 levels) in require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:66:in `each'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:66:in `block in require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:55:in `each'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler/runtime.rb:55:in `require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/bundler-1.1.3/lib/bundler.rb:119:in `require'
 from /Users/blogbin/projects/workspaces/app_store/ruby/xbmc/config/application.rb:7:in `&lt;top (required)&gt;'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:52:in `require'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:52:in `block in &lt;top (required)&gt;'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:49:in `tap'
 from /Users/blogbin/.rvm/gems/ruby-1.9.3-p0@appstore/gems/railties-3.1.0/lib/rails/commands.rb:49:in `&lt;top (required)&gt;'
 from script/rails:6:in `require'
 from script/rails:6:in `&lt;main&gt;
</code></pre>

<p>```</p>

<p>Google 搜索了不少帖子，大部分都只是解决一部分问题，又冒出新的问题
最后终于找到一篇介绍完整的解决的办法。</p>

<p><a href="http://coderwall.com/p/njrnzq">http://coderwall.com/p/njrnzq</a></p>

<!--more-->


<p><blockquote><p>Managed to fix it following these steps:</p></p><p><p>Installed XCode 4.4 and Command Line Tools<br/>Ran this in terminal:</p></p><p><p>sudo chown -R <user> /usr/local<br/>brew update<br/>brew tap homebrew/dupes<br/>brew install apple-gcc42</p></p><p><p>Installed XQuartz 2.7.2 (http://xquartz.macosforge.org/landing)</p></p><p><p>Fixed any errors reported by brew doctor<br/>Ran this in terminal:</p></p><p><p>gem uninstall rmagick<br/>brew uninstall imagemagick<br/>brew install --fresh imagemagick<br/>gem install rmagick</p></p><p><p>After this, RMagick worked flawlessly again!</p></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redmine 改进：新建问题发送邮件中显示完成时间和上传的附件信息]]></title>
    <link href="http://tech-blog.blogbin.info/blog/2012/08/15/displaying-attachments-and-due-date-within-email-when-a-issue-is-created/"/>
    <updated>2012-08-15T23:44:00+08:00</updated>
    <id>http://tech-blog.blogbin.info/blog/2012/08/15/displaying-attachments-and-due-date-within-email-when-a-issue-is-created</id>
    <content type="html"><![CDATA[<p>Redmine <a href="http://www.redmine.org/">http://www.redmine.org/</a> 的确是一款优秀的任务跟踪管理系统，是开源免费，而且是基于 RubyOnRails 来开发的 Web 系统，代码具有很强的学习的价值。</p>

<p>很奇怪为何新建问题，系统自动发送的邮件没有显示要求完成时间和附件信息，而更新问题时发送的邮件却有两者信息。</p>

<p>阅读代码后发现，Redmine 负责渲染新建问题自动发送的邮件的地方，没有显示要求完成时间和附件信息。</p>

<p>要求完成时间比较好好处理，直接从 @issue.due_date 获得；</p>

<p>但新建问题后，就触发 Observer 自动发邮件，此时上传过的附件还没保存入库，所以利用现有途径无法从 @issue 获得附件。</p>

<p>尝试好几种方案，均不成功。最后考虑给 Issue 模型加一个实例变量临时保存附件信息。</p>

<p>Redmine 版本基于 1.2.1</p>

<p>与邮件正文内容显示相关的关键代码在 show_detail.rb 的 show_detail() 方法：</p>

<p><a href="https://github.com/redmine/redmine/blob/master/app/helpers/issues_helper.rb">https://github.com/redmine/redmine/blob/master/app/helpers/issues_helper.rb</a></p>

<p>具体调整如下：</p>

<!--more-->


<h5>1. 打开 Issue 类，添加新的实例变量 original_attachments，用于临时保存刚上传的附件</h5>

<p>``` ruby
class Issue &lt; ActiveRecord::Base</p>

<p>  attr_accessor :original_attachments</p>

<p>end
```</p>

<h5>2. 修改 IssuesController#create 方法</h5>

<p>``` ruby issues_controller.rb
def create</p>

<pre><code>call_hook(:controller_issues_new_before_save, { :params =&gt; params, :issue =&gt; @issue })

# 对 @issue.original_attachments 进行赋值
@issue.original_attachments = params[:attachments]

if @issue.save

# ... 以下省略
</code></pre>

<p>  end
```</p>

<h5>3. 渲染邮件格式的地方补充显示要求完成时间和附件信息</h5>

<p>``` ruby issue_add_text_html.rhtml
&lt;%= l(:text_issue_added, :id => "##{@issue.id}", :author => h(@issue.author)) %></p>

<p>&lt;%
  # 显示完成时间信息
  if @issue.due_date
%></p>

<ul>
  <li><%= l(:text_journal_set_to, :label => l(:field_due_date), :value => format_date( @issue.due_date ) ) %> </li>
</ul>


<p>&lt;% end %></p>

<p>&lt;%
  # 显示附件信息
  attachments = @issue.original_attachments
  puts "attachments = #{attachments}"
  if attachments &amp;&amp; attachments.is_a?(Hash)
%></p>

<pre><code>&lt;ul&gt;
        &lt;%
        attachments.each_value do |attachment|
          file = attachment['file']
          next unless file &amp;&amp; file.size &gt; 0
        %&gt;
            &lt;li&gt;&lt;%= l(:text_journal_added, :label =&gt; l(:label_attachment), :value =&gt; file.original_filename ) %&gt; &lt;/li&gt;
    &lt;% end %&gt;
&lt;/ul&gt;
</code></pre>

<p>&lt;% end %></p>

<hr />


<p>&lt;%= render :partial => "issue_text_html", :locals => { :issue => @issue, :issue_url => @issue_url } %></p>

<p>```</p>

<h5>4. 最终效果如图</h5>

<p><blockquote><p><img src="/images/2012-08-15-displaying-attachments-and-due-date-within-email-when-a-issue-is-created/redmine_issue_add_email.png"></p></blockquote></p>
]]></content>
  </entry>
  
</feed>
